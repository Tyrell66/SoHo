global
      log /dev/log    local0
      log /dev/log    local1 notice
      # chroot /var/lib/haproxy
      # stats socket /run/haproxy/admin.sock mode 660 level admin
      # stats timeout 30s
      # user haproxy
      # group haproxy
      daemon
      maxconn 2048
      tune.ssl.default-dh-param 4096

      # Default SSL material locations
      ca-base /etc/ssl/certs
      crt-base /etc/ssl/private

      # Default ciphers to use on SSL-enabled listening sockets.
      # For more information, see ciphers(1SSL). This list is from:
      # https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
      # http://www.mattzuba.com/2015/07/hardening-haproxy-for-an-a-rating/

	# Ciphers for TLS v1.2
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	
	# Ciphers for TLS v1.3
	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	# Ciphers for TLS v1.2
	ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	
	# Ciphers for TLS v1.3
	ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets


      
defaults
      log     global
      mode    http
      option  httplog
      option  dontlognull
      option  httpchk
      option  forwardfor
	option  http-keep-alive
	timeout connect 10s
	timeout client  30s
	timeout server  30s
      # errorfile 400 /etc/haproxy/errors/400.http
      # errorfile 403 /etc/haproxy/errors/403.http
      # errorfile 408 /etc/haproxy/errors/408.http
      # errorfile 500 /etc/haproxy/errors/500.http
      # errorfile 502 /etc/haproxy/errors/502.http
      # errorfile 503 /etc/haproxy/errors/503.http
      # errorfile 504 /etc/haproxy/errors/504.http
      maxconn 30
      stats enable
      stats uri /stats
      stats realm Haproxy\ Statistics
      stats auth Stats:Stats
      
      # compression algo gzip
      # compression type text/html text/plain text/css text/javascript

frontend http-in
      bind *:80

	# Prevent DDoS
	stick-table type ip size 100k expire 30s store http_req_rate(10s)
	http-request track-sc0 src
	http-request deny deny_status 429 if { sc_http_req_rate(0) gt 20 }

      http-request add-header X-Forwarded-Proto http
      redirect scheme https if !{ ssl_fc }


frontend https-in
	# /etc/haproxy/certs/ contains both .pem for default and second domain names.
  bind *:443 ssl alpn http/1.1 crt /etc/haproxy/certs/ ecdhe secp384r1
	http-response replace-header Location ^http://(.*)$	https://\1
	
	http-request set-header X-Forwarded-Proto https
	http-request set-header X-Forwarded-Port 443
	capture request header X-Forwarded-For len 15

	## Secure headers https://blog.devcloud.hosting/securing-haproxy-and-nginx-via-http-headers-54020d460283
	## Test your config with https://securityheaders.com/
	## and https://observatory.mozilla.org/

	http-response set-header X-XSS-Protection 1;mode=block
	http-response set-header X-Content-Type-Options nosniff
	http-response set-header Referrer-Policy no-referrer-when-downgrade
	http-response set-header X-Frame-Options SAMEORIGIN
	http-response del-header X-Powered-By
	http-response del-header Server
	http-response del-header X-Apache-Server-ID
	# http-response set-header Content-Security-Policy-Report-Only "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self'; connect-src 'self'; font-src 'self'; object-src 'self'; media-src 'self'; child-src 'self'; sandbox 'self'; report-uri 'self'; form-action 'self'; frame-ancestors 'self'"
	http-response set-header Feature-Policy "geolocation 'none'; midi 'none'; notifications 'none'; push 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; vibrate 'none'; fullscreen 'none'; payment 'none'"

# This line is for HSTS:
	http-response set-header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload;"

      http-request add-header X-Forwarded-Proto https
      
# Define hosts
      use_backend       nas-backend if { hdr(Host) -i nas.tyrell66.eu }
      use_backend       guacamole-backend if { hdr(Host) -i tyrell66.eu } { path_beg -i /guacamole }
      use_backend       gc-backend if { hdr(Host) -i tyrell66.eu } { path_beg -i /gc }
      use_backend       photostation-backend if { hdr(Host) -i tyrell66.eu } { path_beg -i /photo }
      use_backend       dvr-backend if { hdr_beg(Host) -i dvr.tyrell66.eu }
      use_backend       phpMyAdmin-backend if { hdr(Host) -i tyrell66.eu } { path_beg -i /phpMyAdmin }
      use_backend       monsite-backend if { hdr_end(Host) -i monsite.be }

# Define backends
backend nas-backend
      server host1               192.168.1.13:5000
backend photostation-backend
      server host1               192.168.1.13:80/photo/
backend guacamole-backend
      server host1               192.168.1.13:58080/guacamole/
backend gc-backend
	http-request replace-uri ^/gc/(.*) /guacamole/\1
      server host1              192.168.1.13:58080/guacamole/#
backend dvr-backend
      server dvr               192.168.1.30:80
backend phpMyAdmin-backend
      server host1        192.168.1.13:80/phpMyAdmin/
backend monsite-backend
#      http-request set-header X-Client-IP %[src]
      server host2     192.168.1.15
